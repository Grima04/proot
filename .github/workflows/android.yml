name: Build for Android

on:
  [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        arch: [ "aarch64" ]
      fail-fast: false

    name: "Build ${{matrix.arch}}"

    runs-on: ubuntu-latest
    env:
      #ANDROID_NDK_HOME: "${ANDROID_SDK_ROOT}/ndk-bundle"
      ANDROID_NDK_HOME: "/home/runner/work/tar/tar/android-ndk-r25"

    steps:
      - uses: actions/checkout@v2

      - name: Setup
        run: |
          sudo mkdir /usr/tmp
          sudo apt update
          sudo apt install clang-tools-6.0 curl gdb lcov libarchive-dev libtalloc-dev sloccount strace swig uthash-dev python3-dev lzop git autotools-dev libexpat-dev
          mkdir /tmp/build
          
          wget https://dl.google.com/android/repository/android-ndk-r25-linux.zip
          unzip android-ndk-r25-linux.zip

      - name: Build libexpat
        run: |
          export TOOLCHAIN=/home/runner/work/proot/proot/android-ndk-r25/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=aarch64-linux-android
          export API=28
          export AR=$TOOLCHAIN/bin/llvm-ar
          export CC=$TOOLCHAIN/bin/$TARGET$API-clang
          export AS=$CC
          export CXX=$TOOLCHAIN/bin/$TARGET$API-clang++
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          git clone https://github.com/libexpat/libexpat
          cd libexpat/expat
          ls
          chmod +x buildconf.sh
          ./buildconf.sh
          ./configure --prefix=/usr --host $TARGET
          make
          sudo make install

      - name: Build libtalloc
        run: |
          export TOOLCHAIN=/home/runner/work/proot/proot/android-ndk-r25/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=aarch64-linux-android
          export API=28
          export AR=$TOOLCHAIN/bin/llvm-ar
          export CC=$TOOLCHAIN/bin/$TARGET$API-clang
          export AS=$CC
          export CXX=$TOOLCHAIN/bin/$TARGET$API-clang++
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          wget https://www.samba.org/ftp/talloc/talloc-2.3.4.tar.gz
          tar -xvf talloc-2.3.4.tar.gz
          cd talloc-2.3.4
          chmod +x configure
          ./configure --prefix=/usr --host $TARGET && cat /home/runner/work/proot/proot/talloc-2.3.4/bin/config.log
          cat /home/runner/work/proot/proot/talloc-2.3.4/bin/config.log
          make
          sudo make install
          
          
      - name: Build libarchive
        run: |
          export TOOLCHAIN=/home/runner/work/proot/proot/android-ndk-r25/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=aarch64-linux-android
          export API=28
          export AR=$TOOLCHAIN/bin/llvm-ar
          export CC=$TOOLCHAIN/bin/$TARGET$API-clang
          export AS=$CC
          export CXX=$TOOLCHAIN/bin/$TARGET$API-clang++
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export CFLAGS="-Wno-error"
          wget https://libarchive.org/downloads/libarchive-3.6.1.tar.gz
          tar -xvf libarchive-3.6.1.tar.gz
          cd libarchive-3.6.1
          chmod +x configure
          ./configure --prefix=/usr --host $TARGET
          make
          sudo make install

      - name: Build
        run: |
          export TOOLCHAIN=/home/runner/work/proot/proot/android-ndk-r25/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=aarch64-linux-android
          export API=28
          export AR=$TOOLCHAIN/bin/llvm-ar
          export CC=$TOOLCHAIN/bin/$TARGET$API-clang
          export AS=$CC
          export CXX=$TOOLCHAIN/bin/$TARGET$API-clang++
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          env LDFLAGS="" make -C src loader.elf loader-m32.elf build.h
          env CFLAGS="--coverage -Wno-error" LDFLAGS="--coverage" make -C src proot

      - name: Upload libraries
        uses: actions/upload-artifact@v2
        with:
          name: build_${{matrix.arch}}
          path: /home/runner/work/proot/proot/src
